When would you want to use a remote repository rather than keeping all your work
local?

    When you need to collaborate with other people.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    For example if someone that work on your project PUSH his change into remote.
    You might need to check whether his change conflict your master or not.
    For making sure that you need to take that action avoiding mistakes.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

        Forking is when you are trying to use someone existing GitHub to your advantage.
    You will have exactly the same file as the one you Fork in your GitHub remote repository.
    You will be able to clone it locally for further implementation and add contributor at your own will.
        Cloning is when you are trying copy from GitHub remote repository to your local repository.
    Or from local repository to another local repository vise versa.
        Branching is when you are trying name a commit at some point of the project 
    then use that name as a reference to that specific commit for further implementation in different area
    or feature of the project.
        Normally every project already has one branch which is master branch so we can branching it from that point.
        Finally if you find a need to combine that branch into another branch. You will end up merging it
    resulting a new branch that has both features of branches.
        These 3 concepts are diffent and they should be use accordingly.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    The last known state of the remote will tell you basicly about how/what the master remote looks like at that time.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Any collaboration will be easier but the learning curve of using Git or GitHub is so steep.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

        It is way easier to manage the project since every changes you make is within a separate branch, unless you
    merge it with the master branch and it is easier to rollback when you mess things up.
